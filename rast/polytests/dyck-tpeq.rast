#test success

type T[x] = +{L : T[T[x]], R : x}
type D = +{L : T[D], $ : 1}

type T'[x] = +{L : T'[T'[x]], R : x}
type D' = +{L : T'[D], $ : 1}

% first two invariants are not necessary
(*
eqtype D = D'
eqtype T[T[x]] = T'[T'[x]]
*)
eqtype T[x] = T'[x]


decl DtoD' : (d : D) |- (d' : D')
proc d' <- DtoD' d = d' <-> d
