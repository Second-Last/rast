#test success

type T[x] = +{L : T[T[x]], R : x}
type D = +{L : T[D], $ : 1}

type S[x] = +{L : S[S[x]], L' : S'[S[x]], R : x}
type S'[x] = +{L : S[S'[x]], L' : S'[S'[x]], R' : x}
type E = +{L : S[E], L' : S'[E], $ : 1}

eqtype T[x] <= S[x]

decl DtoE : (d : D) |- (e : E)

proc e <- DtoE d = e <-> d
